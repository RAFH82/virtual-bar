{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alyson/coding/slack-clone/src/ChatInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useStateValue } from \"./hooks+context/StateProvider\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport \"./ChatInput.css\";\n\nfunction ChatInput({\n  barId,\n  tableId\n}) {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [{\n    user\n  }] = useStateValue();\n  const [barDetails, setBarDetails] = useState(null);\n  useEffect(() => {\n    db.collection(\"bars\").doc(barId).collection(\"tables\").doc(tableId).onSnapshot(snapshot => {\n      setBarDetails(snapshot.data());\n    });\n    console.log(\"Table Name is: \", tableDetails);\n  }, [tableId]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n    db.collection(\"bars\").doc(barId).collection(\"tables\").doc(tableId).collection(\"messages\").add({\n      message: input,\n      // timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      user: user.displayName // userImage: user.photoURL,\n\n    });\n    setInput(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatInput\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: event => setInput(event.target.value),\n        placeholder: `Message #${barId === null || barId === void 0 ? void 0 : barId.toLowerCase()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: sendMessage,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ChatInput, \"C+ZBppqC/n6ZhhppOQL+4t/EsSc=\", false, function () {\n  return [useStateValue];\n});\n\n_c = ChatInput;\nexport default ChatInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"sources":["/home/alyson/coding/slack-clone/src/ChatInput.js"],"names":["React","useState","useStateValue","db","firebase","ChatInput","barId","tableId","input","setInput","user","barDetails","setBarDetails","useEffect","collection","doc","onSnapshot","snapshot","data","console","log","tableDetails","sendMessage","event","preventDefault","add","message","displayName","target","value","toLowerCase"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,iBAAP;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAnB,EAAuC;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC;AAAES,IAAAA;AAAF,GAAD,IAAaR,aAAa,EAAhC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AAEAY,EAAAA,SAAS,CAAC,MAAM;AAEfV,IAAAA,EAAE,CAACW,UAAH,CAAc,MAAd,EACEC,GADF,CACMT,KADN,EAEEQ,UAFF,CAEa,QAFb,EAGEC,GAHF,CAGMR,OAHN,EAIES,UAJF,CAIcC,QAAD,IAAc;AACzBL,MAAAA,aAAa,CAACK,QAAQ,CAACC,IAAT,EAAD,CAAb;AACA,KANF;AAOCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,YAA/B;AAEA,GAXO,EAWL,CAACd,OAAD,CAXK,CAAT;;AAcA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEArB,IAAAA,EAAE,CAACW,UAAH,CAAc,MAAd,EACEC,GADF,CACMT,KADN,EAEEQ,UAFF,CAEa,QAFb,EAGEC,GAHF,CAGMR,OAHN,EAIEO,UAJF,CAIa,UAJb,EAKEW,GALF,CAKM;AACLC,MAAAA,OAAO,EAAElB,KADJ;AAEL;AACAE,MAAAA,IAAI,EAAEA,IAAI,CAACiB,WAHN,CAIL;;AAJK,KALN;AAWAlB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,GAfD;;AAiBA,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACC;AAAA,8BACC;AACC,QAAA,KAAK,EAAED,KADR;AAEC,QAAA,QAAQ,EAAGe,KAAD,IAAWd,QAAQ,CAACc,KAAK,CAACK,MAAN,CAAaC,KAAd,CAF9B;AAGC,QAAA,WAAW,EAAG,YAAWvB,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEwB,WAAP,EAAqB;AAH/C;AAAA;AAAA;AAAA;AAAA,cADD,eAMC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAER,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GAlDQjB,S;UAEWH,a;;;KAFXG,S;AAoDT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useStateValue } from \"./hooks+context/StateProvider\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nimport \"./ChatInput.css\";\n\nfunction ChatInput({ barId, tableId }) {\n\tconst [input, setInput] = useState(\"\");\n\tconst [{ user }] = useStateValue();\n\tconst [barDetails, setBarDetails] = useState(null);\n\t\n\tuseEffect(() => {\n\t\t\n\t\tdb.collection(\"bars\")\n\t\t\t.doc(barId)\n\t\t\t.collection(\"tables\")\n\t\t\t.doc(tableId)\n\t\t\t.onSnapshot((snapshot) => {\n\t\t\t\tsetBarDetails(snapshot.data())\n\t\t\t});\n\t\t\tconsole.log(\"Table Name is: \", tableDetails)\n\t\n\t\t}, [tableId]);\t\t\n\n\n\tconst sendMessage = (event) => {\n\t\tevent.preventDefault();\n\n\t\tdb.collection(\"bars\")\n\t\t\t.doc(barId)\n\t\t\t.collection(\"tables\")\n\t\t\t.doc(tableId)\n\t\t\t.collection(\"messages\")\n\t\t\t.add({\n\t\t\tmessage: input,\n\t\t\t// timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tuser: user.displayName,\n\t\t\t// userImage: user.photoURL,\n\t\t});\n\t\tsetInput(\"\");\n\t};\n\n\treturn (\n\t\t<div className=\"chatInput\">\n\t\t\t<form>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={(event) => setInput(event.target.value)}\n\t\t\t\t\tplaceholder={`Message #${barId?.toLowerCase()}`}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\" onClick={sendMessage}>\n\t\t\t\t\tSEND\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default ChatInput;\n"]},"metadata":{},"sourceType":"module"}